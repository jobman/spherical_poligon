Проект: Пошаговая стратегия на сферическом мире.

Стек технологий:
- Python
- Виртуальное окружение: .venv
- Библиотеки: pygame, numpy

Текущее состояние:
- Проект был рефакторизован в архитектуру Модель-Представление (Model-View).
- Модель (`game_world.py`): Содержит класс `GameWorld`, который генерирует и хранит данные для сферической карты из тайлов. Он не зависит от логики рендеринга.
- Представление (`renderer.py`): Содержит класс `Renderer`, который обрабатывает все отрисовки Pygame, ввод пользователя и управление камерой (вращение, масштабирование).
- Производительность: Цикл рендеринга полностью оптимизирован с использованием векторизованных операций NumPy и предварительно вычисленных геометрических данных, что обеспечивает высокий FPS.
- Управление: Камера имеет плавное, основанное на скорости, вращение и масштабирование. Логика вращения корректно инвертируется при просмотре сферы снизу для интуитивного управления.
- Конфигурация: Сложность сферы можно легко настроить, изменив `subdivision_level` в `game_world.py`.

Следующие шаги: Проект находится в отличном состоянии для начала создания основной игровой механики в стиле цивилизации.